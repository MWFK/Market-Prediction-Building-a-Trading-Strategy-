# The best Notebooks


### Winning Solutions of Previous Market Prediction Kaggle Challenges
Discussion
https://www.kaggle.com/c/jane-street-market-prediction/discussion/199189


### Super Fast Utility Score Function Implementation
Discussion
A higher utility score means that Jane Street believes your model is better and thus the higher you are on the leaderboard.
https://www.kaggle.com/c/jane-street-market-prediction/discussion/201257


### Comparison between different fillna methods
Discussion
https://www.kaggle.com/c/jane-street-market-prediction/discussion/201302



### Bottleneck encoder + MLP + PurgedGroupTimeSeriesSplit 
Score 9331.843 (team)
https://www.kaggle.com/aimind/bottleneck-encoder-mlp-keras-tuner-8601c5


### Bottleneck encoder + MLP + Keras Tuner + GroupTimeSeriesSplit 
Score 3207.745 (team)
https://www.kaggle.com/snippsy/bottleneck-encoder-mlp-keras-tuner


### ResNet starter 13bdb8 
Score 9341.295 (team)
https://www.kaggle.com/aimind/resnet-or-1dcnn


### Light GBM + Reduce memory usage
Score 3968.415
https://www.kaggle.com/binhlc/jane-street-light-gbm


### FE for fast inference
https://www.kaggle.com/lucasmorin/running-algos-fe-for-fast-inference







https://www.kaggle.com/marcodibartolo/cmu-team-pca-xgbclassifier-purgedsplit-optunacv

https://www.kaggle.com/anatolymal/jsm-v05-1-encoder-catboost

https://www.kaggle.com/sarvesh278/xgboost-trading-classifier

https://www.kaggle.com/satorushibata/lightgbm-classifier-pca-logit-on-utility-score

https://www.kaggle.com/miklgr500/optuna-xgbclassifier-parameters-optimize

https://www.kaggle.com/kwonyoung234/jane-pytorch-lstm-implementation




### Train NN and save and load weights(models) (*)
Yirun
https://www.kaggle.com/gogo827jz/jane-street-neural-network-starter/comments?scriptVersionId=48765235


#### Purged TS CV + OPTUNA + PIPE + XGB + GridSearch (*)
Score 4992.749
https://www.kaggle.com/marketneutral/purged-time-series-cv-xgboost-optuna


### Purged TS CV + HyperOpt + FFill (*)
Score 5379.509
https://www.kaggle.com/gogo827jz/jane-street-ffill-xgboost-purgedtimeseriescv


### Time Series Split (*)
https://www.kaggle.com/jorijnsmit/found-the-holy-grail-grouptimeseriessplit


### Validating Cross_Validators with Custom Scoring (Utility func) (*)
https://www.kaggle.com/jorijnsmit/validating-cross-validators


### Reduce_memory_usage + TCN (*)
https://www.kaggle.com/tarriaza/janestreet-tcn-w-double-stacked-autoencoder


### Jane Street with Keras NN overfit +11000 (*)
https://www.kaggle.com/code1110/jane-street-with-keras-nn-overfit/output 


### Jane Street: Neural Network Starter +6700 score (*)
https://www.kaggle.com/gogo827jz/jane-street-neural-network-starter


### Blending tensorflow and pytorch +1100 (*)
https://www.kaggle.com/a763337092/blending-tensorflow-and-pytorch


### OWN Jane Street with Keras NN +8000 score (*)
https://www.kaggle.com/tarlannazarov/own-jane-street-with-keras-nn/


### Did Jane Street modify their trading model around day 85? (*)
https://www.kaggle.com/c/jane-street-market-prediction/discussion/201930


### Feature 0, beyond feature 0 (*)
https://www.kaggle.com/nanomathias/feature-0-beyond-feature-0


### Tensorflow Dense + Keras Tuner (*)
Score 6697.628
https://www.kaggle.com/binhlc/jane-street-tensorflow-dense

